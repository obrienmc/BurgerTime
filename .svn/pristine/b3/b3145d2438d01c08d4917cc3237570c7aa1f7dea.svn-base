/**
 * 
 */
package burgertime;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;

import javax.swing.JLabel;

/**
 * TODO Put here a description of what this class does.
 *
 * @author xiaox.
 *         Created Feb 17, 2014.
 */
public class Score {
	private JLabel scorelabel;
	private JLabel highScoreLabel;
	private int score;
	private String[] highScoreName=new String[5];
	private int[] highScore=new int[5];
	private PrintWriter outputFile;
	private File inputFile;
	private Scanner in;
	
	/**
	 * TODO Put here a description of what this constructor does.
	 * @throws FileNotFoundException 
	 *
	 */
	public Score(){
		this.scorelabel=new JLabel("  Score  :  0  ");
		this.scorelabel.setSize(new Dimension(300,50));
		this.scorelabel.setFont(new Font("Dialog", Font.ITALIC, 20));
		this.scorelabel.setForeground(Color.red);
		
		this.highScoreLabel=new JLabel("  Highest Score  :  "+this.highScore[0]+"  ");
		this.highScoreLabel.setSize(new Dimension(300,50));
		this.highScoreLabel.setFont(new Font("Dialog", Font.ITALIC, 22));
		this.highScoreLabel.setForeground(Color.red);
		
		this.score=0;
		
		this.inputFile = new File("HighScore.txt");
		try {
			this.in = new Scanner(this.inputFile);
		} catch (FileNotFoundException e) {
			new RuntimeException("You suck");
		}
		int index=0;
		while (this.in.hasNextLine()) {
			String line = this.in.nextLine();
			int i=0;
			while (line.charAt(i)!=' '){
				i++;
			}
			this.highScoreName[index]=line.substring(0,i);
			this.highScore[index] = Integer.parseInt(line.substring(i+1, line.length()));
			index++;
		}
		this.in.close();
		for (int i=0;i<5;i++){
			System.out.println(this.highScore[i]);
			System.out.println(this.highScoreName[i]);
		}
		
		try {
			this.outputFile = new PrintWriter("HighScore.txt");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * TODO Put here a description of what this method does.
	 *
	 * @return
	 */
	public JLabel getLabel(){
		return this.scorelabel;
	}
	
	/**
	 * TODO Put here a description of what this method does.
	 *
	 * @return
	 */
	public String getScoreText(){
		return this.scorelabel.getText();
	}
	
	/**
	 * TODO Put here a description of what this method does.
	 *
	 * @return
	 */
	public JLabel getHighScoreLabel(){
		return this.highScoreLabel;
	}
	/**
	 * TODO Put here a description of what this method does. 
	 * @return 
	 */
	@SuppressWarnings("javadoc")
	public int getScore(){
		return this.score;
	}
	
	/**
	 * TODO Put here a description of what this method does.
	 *
	 * @param index
	 * @return
	 */
	@SuppressWarnings("javadoc")
	public int getHighScore(int index){
		return this.highScore[index];
	}
	/**
	 * TODO Put here a description of what this method does.
	 *
	 * @param score
	 */
	public void addScore(int score){
		if (this.score+score>0){
			this.score+=score;
		}
		this.scorelabel.setText("Score  :  "+this.score+"  ");
	}
	
	/**
	 * TODO Put here a description of what this method does.
	 *
	 * @param name
	 * @param score
	 */
	public void recordHighScore(String name, int score){
		
		this.outputFile.println(name+" "+score);
		this.outputFile.close();
	}
}
